// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: pkts.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PKTS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nim                 string                 `protobuf:"bytes,2,opt,name=nim,proto3" json:"nim,omitempty"`
	KodeProdi           string                 `protobuf:"bytes,3,opt,name=kode_prodi,json=kodeProdi,proto3" json:"kode_prodi,omitempty"`
	TahunSidang         string                 `protobuf:"bytes,4,opt,name=tahun_sidang,json=tahunSidang,proto3" json:"tahun_sidang,omitempty"`
	F8                  uint32                 `protobuf:"varint,5,opt,name=f8,proto3" json:"f8,omitempty"`
	F504                uint32                 `protobuf:"varint,6,opt,name=f504,proto3" json:"f504,omitempty"`
	F502                uint32                 `protobuf:"varint,7,opt,name=f502,proto3" json:"f502,omitempty"`
	F506                uint32                 `protobuf:"varint,8,opt,name=f506,proto3" json:"f506,omitempty"`
	F505                uint64                 `protobuf:"varint,9,opt,name=f505,proto3" json:"f505,omitempty"`
	F5A1                string                 `protobuf:"bytes,10,opt,name=f5a1,proto3" json:"f5a1,omitempty"`
	F5A2                string                 `protobuf:"bytes,11,opt,name=f5a2,proto3" json:"f5a2,omitempty"`
	F1101               uint32                 `protobuf:"varint,12,opt,name=f1101,proto3" json:"f1101,omitempty"`
	F1102               string                 `protobuf:"bytes,13,opt,name=f1102,proto3" json:"f1102,omitempty"`
	F5B                 string                 `protobuf:"bytes,14,opt,name=f5b,proto3" json:"f5b,omitempty"`
	F5C                 uint32                 `protobuf:"varint,15,opt,name=f5c,proto3" json:"f5c,omitempty"`
	F5D                 uint32                 `protobuf:"varint,16,opt,name=f5d,proto3" json:"f5d,omitempty"`
	F18A                uint32                 `protobuf:"varint,17,opt,name=f18a,proto3" json:"f18a,omitempty"`
	F18B                string                 `protobuf:"bytes,18,opt,name=f18b,proto3" json:"f18b,omitempty"`
	F18C                string                 `protobuf:"bytes,19,opt,name=f18c,proto3" json:"f18c,omitempty"`
	F18D                string                 `protobuf:"bytes,20,opt,name=f18d,proto3" json:"f18d,omitempty"`
	F1201               uint32                 `protobuf:"varint,21,opt,name=f1201,proto3" json:"f1201,omitempty"`
	F1202               string                 `protobuf:"bytes,22,opt,name=f1202,proto3" json:"f1202,omitempty"`
	F14                 uint32                 `protobuf:"varint,23,opt,name=f14,proto3" json:"f14,omitempty"`
	F15                 uint32                 `protobuf:"varint,24,opt,name=f15,proto3" json:"f15,omitempty"`
	F1761               uint32                 `protobuf:"varint,25,opt,name=f1761,proto3" json:"f1761,omitempty"`
	F1762               uint32                 `protobuf:"varint,26,opt,name=f1762,proto3" json:"f1762,omitempty"`
	F1763               uint32                 `protobuf:"varint,27,opt,name=f1763,proto3" json:"f1763,omitempty"`
	F1764               uint32                 `protobuf:"varint,28,opt,name=f1764,proto3" json:"f1764,omitempty"`
	F1765               uint32                 `protobuf:"varint,29,opt,name=f1765,proto3" json:"f1765,omitempty"`
	F1766               uint32                 `protobuf:"varint,30,opt,name=f1766,proto3" json:"f1766,omitempty"`
	F1767               uint32                 `protobuf:"varint,31,opt,name=f1767,proto3" json:"f1767,omitempty"`
	F1768               uint32                 `protobuf:"varint,32,opt,name=f1768,proto3" json:"f1768,omitempty"`
	F1769               uint32                 `protobuf:"varint,33,opt,name=f1769,proto3" json:"f1769,omitempty"`
	F1770               uint32                 `protobuf:"varint,34,opt,name=f1770,proto3" json:"f1770,omitempty"`
	F1771               uint32                 `protobuf:"varint,35,opt,name=f1771,proto3" json:"f1771,omitempty"`
	F1772               uint32                 `protobuf:"varint,36,opt,name=f1772,proto3" json:"f1772,omitempty"`
	F1773               uint32                 `protobuf:"varint,37,opt,name=f1773,proto3" json:"f1773,omitempty"`
	F1774               uint32                 `protobuf:"varint,38,opt,name=f1774,proto3" json:"f1774,omitempty"`
	F21                 uint32                 `protobuf:"varint,39,opt,name=f21,proto3" json:"f21,omitempty"`
	F22                 uint32                 `protobuf:"varint,40,opt,name=f22,proto3" json:"f22,omitempty"`
	F23                 uint32                 `protobuf:"varint,41,opt,name=f23,proto3" json:"f23,omitempty"`
	F24                 uint32                 `protobuf:"varint,42,opt,name=f24,proto3" json:"f24,omitempty"`
	F25                 uint32                 `protobuf:"varint,43,opt,name=f25,proto3" json:"f25,omitempty"`
	F26                 uint32                 `protobuf:"varint,44,opt,name=f26,proto3" json:"f26,omitempty"`
	F27                 uint32                 `protobuf:"varint,45,opt,name=f27,proto3" json:"f27,omitempty"`
	F301                uint32                 `protobuf:"varint,46,opt,name=f301,proto3" json:"f301,omitempty"`
	F302                uint32                 `protobuf:"varint,47,opt,name=f302,proto3" json:"f302,omitempty"`
	F303                uint32                 `protobuf:"varint,48,opt,name=f303,proto3" json:"f303,omitempty"`
	F401                uint32                 `protobuf:"varint,49,opt,name=f401,proto3" json:"f401,omitempty"`
	F402                uint32                 `protobuf:"varint,50,opt,name=f402,proto3" json:"f402,omitempty"`
	F403                uint32                 `protobuf:"varint,51,opt,name=f403,proto3" json:"f403,omitempty"`
	F404                uint32                 `protobuf:"varint,52,opt,name=f404,proto3" json:"f404,omitempty"`
	F405                uint32                 `protobuf:"varint,53,opt,name=f405,proto3" json:"f405,omitempty"`
	F406                uint32                 `protobuf:"varint,54,opt,name=f406,proto3" json:"f406,omitempty"`
	F407                uint32                 `protobuf:"varint,55,opt,name=f407,proto3" json:"f407,omitempty"`
	F408                uint32                 `protobuf:"varint,56,opt,name=f408,proto3" json:"f408,omitempty"`
	F409                uint32                 `protobuf:"varint,57,opt,name=f409,proto3" json:"f409,omitempty"`
	F410                uint32                 `protobuf:"varint,58,opt,name=f410,proto3" json:"f410,omitempty"`
	F411                uint32                 `protobuf:"varint,59,opt,name=f411,proto3" json:"f411,omitempty"`
	F412                uint32                 `protobuf:"varint,60,opt,name=f412,proto3" json:"f412,omitempty"`
	F413                uint32                 `protobuf:"varint,61,opt,name=f413,proto3" json:"f413,omitempty"`
	F414                uint32                 `protobuf:"varint,62,opt,name=f414,proto3" json:"f414,omitempty"`
	F415                uint32                 `protobuf:"varint,63,opt,name=f415,proto3" json:"f415,omitempty"`
	F416                string                 `protobuf:"bytes,64,opt,name=f416,proto3" json:"f416,omitempty"`
	F6                  uint32                 `protobuf:"varint,65,opt,name=f6,proto3" json:"f6,omitempty"`
	F7                  uint32                 `protobuf:"varint,66,opt,name=f7,proto3" json:"f7,omitempty"`
	F7A                 uint32                 `protobuf:"varint,67,opt,name=f7a,proto3" json:"f7a,omitempty"`
	F1001               uint32                 `protobuf:"varint,68,opt,name=f1001,proto3" json:"f1001,omitempty"`
	F1002               string                 `protobuf:"bytes,69,opt,name=f1002,proto3" json:"f1002,omitempty"`
	F1601               uint32                 `protobuf:"varint,70,opt,name=f1601,proto3" json:"f1601,omitempty"`
	F1602               uint32                 `protobuf:"varint,71,opt,name=f1602,proto3" json:"f1602,omitempty"`
	F1603               uint32                 `protobuf:"varint,72,opt,name=f1603,proto3" json:"f1603,omitempty"`
	F1604               uint32                 `protobuf:"varint,73,opt,name=f1604,proto3" json:"f1604,omitempty"`
	F1605               uint32                 `protobuf:"varint,74,opt,name=f1605,proto3" json:"f1605,omitempty"`
	F1606               uint32                 `protobuf:"varint,75,opt,name=f1606,proto3" json:"f1606,omitempty"`
	F1607               uint32                 `protobuf:"varint,76,opt,name=f1607,proto3" json:"f1607,omitempty"`
	F1608               uint32                 `protobuf:"varint,77,opt,name=f1608,proto3" json:"f1608,omitempty"`
	F1609               uint32                 `protobuf:"varint,78,opt,name=f1609,proto3" json:"f1609,omitempty"`
	F1610               uint32                 `protobuf:"varint,79,opt,name=f1610,proto3" json:"f1610,omitempty"`
	F1611               uint32                 `protobuf:"varint,80,opt,name=f1611,proto3" json:"f1611,omitempty"`
	F1612               uint32                 `protobuf:"varint,81,opt,name=f1612,proto3" json:"f1612,omitempty"`
	F1613               uint32                 `protobuf:"varint,82,opt,name=f1613,proto3" json:"f1613,omitempty"`
	F1614               string                 `protobuf:"bytes,83,opt,name=f1614,proto3" json:"f1614,omitempty"`
	NamaAtasan          string                 `protobuf:"bytes,84,opt,name=nama_atasan,json=namaAtasan,proto3" json:"nama_atasan,omitempty"`
	HpAtasan            string                 `protobuf:"bytes,85,opt,name=hp_atasan,json=hpAtasan,proto3" json:"hp_atasan,omitempty"`
	EmailAtasan         string                 `protobuf:"bytes,86,opt,name=email_atasan,json=emailAtasan,proto3" json:"email_atasan,omitempty"`
	TinggalSelamaKuliah string                 `protobuf:"bytes,87,opt,name=tinggal_selama_kuliah,json=tinggalSelamaKuliah,proto3" json:"tinggal_selama_kuliah,omitempty"`
	Code                string                 `protobuf:"bytes,88,opt,name=code,proto3" json:"code,omitempty"`
	MailSent            *timestamppb.Timestamp `protobuf:"bytes,89,opt,name=mail_sent,json=mailSent,proto3" json:"mail_sent,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,90,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,91,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt           *timestamppb.Timestamp `protobuf:"bytes,92,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *PKTS) Reset() {
	*x = PKTS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PKTS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PKTS) ProtoMessage() {}

func (x *PKTS) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PKTS.ProtoReflect.Descriptor instead.
func (*PKTS) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{0}
}

func (x *PKTS) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PKTS) GetNim() string {
	if x != nil {
		return x.Nim
	}
	return ""
}

func (x *PKTS) GetKodeProdi() string {
	if x != nil {
		return x.KodeProdi
	}
	return ""
}

func (x *PKTS) GetTahunSidang() string {
	if x != nil {
		return x.TahunSidang
	}
	return ""
}

func (x *PKTS) GetF8() uint32 {
	if x != nil {
		return x.F8
	}
	return 0
}

func (x *PKTS) GetF504() uint32 {
	if x != nil {
		return x.F504
	}
	return 0
}

func (x *PKTS) GetF502() uint32 {
	if x != nil {
		return x.F502
	}
	return 0
}

func (x *PKTS) GetF506() uint32 {
	if x != nil {
		return x.F506
	}
	return 0
}

func (x *PKTS) GetF505() uint64 {
	if x != nil {
		return x.F505
	}
	return 0
}

func (x *PKTS) GetF5A1() string {
	if x != nil {
		return x.F5A1
	}
	return ""
}

func (x *PKTS) GetF5A2() string {
	if x != nil {
		return x.F5A2
	}
	return ""
}

func (x *PKTS) GetF1101() uint32 {
	if x != nil {
		return x.F1101
	}
	return 0
}

func (x *PKTS) GetF1102() string {
	if x != nil {
		return x.F1102
	}
	return ""
}

func (x *PKTS) GetF5B() string {
	if x != nil {
		return x.F5B
	}
	return ""
}

func (x *PKTS) GetF5C() uint32 {
	if x != nil {
		return x.F5C
	}
	return 0
}

func (x *PKTS) GetF5D() uint32 {
	if x != nil {
		return x.F5D
	}
	return 0
}

func (x *PKTS) GetF18A() uint32 {
	if x != nil {
		return x.F18A
	}
	return 0
}

func (x *PKTS) GetF18B() string {
	if x != nil {
		return x.F18B
	}
	return ""
}

func (x *PKTS) GetF18C() string {
	if x != nil {
		return x.F18C
	}
	return ""
}

func (x *PKTS) GetF18D() string {
	if x != nil {
		return x.F18D
	}
	return ""
}

func (x *PKTS) GetF1201() uint32 {
	if x != nil {
		return x.F1201
	}
	return 0
}

func (x *PKTS) GetF1202() string {
	if x != nil {
		return x.F1202
	}
	return ""
}

func (x *PKTS) GetF14() uint32 {
	if x != nil {
		return x.F14
	}
	return 0
}

func (x *PKTS) GetF15() uint32 {
	if x != nil {
		return x.F15
	}
	return 0
}

func (x *PKTS) GetF1761() uint32 {
	if x != nil {
		return x.F1761
	}
	return 0
}

func (x *PKTS) GetF1762() uint32 {
	if x != nil {
		return x.F1762
	}
	return 0
}

func (x *PKTS) GetF1763() uint32 {
	if x != nil {
		return x.F1763
	}
	return 0
}

func (x *PKTS) GetF1764() uint32 {
	if x != nil {
		return x.F1764
	}
	return 0
}

func (x *PKTS) GetF1765() uint32 {
	if x != nil {
		return x.F1765
	}
	return 0
}

func (x *PKTS) GetF1766() uint32 {
	if x != nil {
		return x.F1766
	}
	return 0
}

func (x *PKTS) GetF1767() uint32 {
	if x != nil {
		return x.F1767
	}
	return 0
}

func (x *PKTS) GetF1768() uint32 {
	if x != nil {
		return x.F1768
	}
	return 0
}

func (x *PKTS) GetF1769() uint32 {
	if x != nil {
		return x.F1769
	}
	return 0
}

func (x *PKTS) GetF1770() uint32 {
	if x != nil {
		return x.F1770
	}
	return 0
}

func (x *PKTS) GetF1771() uint32 {
	if x != nil {
		return x.F1771
	}
	return 0
}

func (x *PKTS) GetF1772() uint32 {
	if x != nil {
		return x.F1772
	}
	return 0
}

func (x *PKTS) GetF1773() uint32 {
	if x != nil {
		return x.F1773
	}
	return 0
}

func (x *PKTS) GetF1774() uint32 {
	if x != nil {
		return x.F1774
	}
	return 0
}

func (x *PKTS) GetF21() uint32 {
	if x != nil {
		return x.F21
	}
	return 0
}

func (x *PKTS) GetF22() uint32 {
	if x != nil {
		return x.F22
	}
	return 0
}

func (x *PKTS) GetF23() uint32 {
	if x != nil {
		return x.F23
	}
	return 0
}

func (x *PKTS) GetF24() uint32 {
	if x != nil {
		return x.F24
	}
	return 0
}

func (x *PKTS) GetF25() uint32 {
	if x != nil {
		return x.F25
	}
	return 0
}

func (x *PKTS) GetF26() uint32 {
	if x != nil {
		return x.F26
	}
	return 0
}

func (x *PKTS) GetF27() uint32 {
	if x != nil {
		return x.F27
	}
	return 0
}

func (x *PKTS) GetF301() uint32 {
	if x != nil {
		return x.F301
	}
	return 0
}

func (x *PKTS) GetF302() uint32 {
	if x != nil {
		return x.F302
	}
	return 0
}

func (x *PKTS) GetF303() uint32 {
	if x != nil {
		return x.F303
	}
	return 0
}

func (x *PKTS) GetF401() uint32 {
	if x != nil {
		return x.F401
	}
	return 0
}

func (x *PKTS) GetF402() uint32 {
	if x != nil {
		return x.F402
	}
	return 0
}

func (x *PKTS) GetF403() uint32 {
	if x != nil {
		return x.F403
	}
	return 0
}

func (x *PKTS) GetF404() uint32 {
	if x != nil {
		return x.F404
	}
	return 0
}

func (x *PKTS) GetF405() uint32 {
	if x != nil {
		return x.F405
	}
	return 0
}

func (x *PKTS) GetF406() uint32 {
	if x != nil {
		return x.F406
	}
	return 0
}

func (x *PKTS) GetF407() uint32 {
	if x != nil {
		return x.F407
	}
	return 0
}

func (x *PKTS) GetF408() uint32 {
	if x != nil {
		return x.F408
	}
	return 0
}

func (x *PKTS) GetF409() uint32 {
	if x != nil {
		return x.F409
	}
	return 0
}

func (x *PKTS) GetF410() uint32 {
	if x != nil {
		return x.F410
	}
	return 0
}

func (x *PKTS) GetF411() uint32 {
	if x != nil {
		return x.F411
	}
	return 0
}

func (x *PKTS) GetF412() uint32 {
	if x != nil {
		return x.F412
	}
	return 0
}

func (x *PKTS) GetF413() uint32 {
	if x != nil {
		return x.F413
	}
	return 0
}

func (x *PKTS) GetF414() uint32 {
	if x != nil {
		return x.F414
	}
	return 0
}

func (x *PKTS) GetF415() uint32 {
	if x != nil {
		return x.F415
	}
	return 0
}

func (x *PKTS) GetF416() string {
	if x != nil {
		return x.F416
	}
	return ""
}

func (x *PKTS) GetF6() uint32 {
	if x != nil {
		return x.F6
	}
	return 0
}

func (x *PKTS) GetF7() uint32 {
	if x != nil {
		return x.F7
	}
	return 0
}

func (x *PKTS) GetF7A() uint32 {
	if x != nil {
		return x.F7A
	}
	return 0
}

func (x *PKTS) GetF1001() uint32 {
	if x != nil {
		return x.F1001
	}
	return 0
}

func (x *PKTS) GetF1002() string {
	if x != nil {
		return x.F1002
	}
	return ""
}

func (x *PKTS) GetF1601() uint32 {
	if x != nil {
		return x.F1601
	}
	return 0
}

func (x *PKTS) GetF1602() uint32 {
	if x != nil {
		return x.F1602
	}
	return 0
}

func (x *PKTS) GetF1603() uint32 {
	if x != nil {
		return x.F1603
	}
	return 0
}

func (x *PKTS) GetF1604() uint32 {
	if x != nil {
		return x.F1604
	}
	return 0
}

func (x *PKTS) GetF1605() uint32 {
	if x != nil {
		return x.F1605
	}
	return 0
}

func (x *PKTS) GetF1606() uint32 {
	if x != nil {
		return x.F1606
	}
	return 0
}

func (x *PKTS) GetF1607() uint32 {
	if x != nil {
		return x.F1607
	}
	return 0
}

func (x *PKTS) GetF1608() uint32 {
	if x != nil {
		return x.F1608
	}
	return 0
}

func (x *PKTS) GetF1609() uint32 {
	if x != nil {
		return x.F1609
	}
	return 0
}

func (x *PKTS) GetF1610() uint32 {
	if x != nil {
		return x.F1610
	}
	return 0
}

func (x *PKTS) GetF1611() uint32 {
	if x != nil {
		return x.F1611
	}
	return 0
}

func (x *PKTS) GetF1612() uint32 {
	if x != nil {
		return x.F1612
	}
	return 0
}

func (x *PKTS) GetF1613() uint32 {
	if x != nil {
		return x.F1613
	}
	return 0
}

func (x *PKTS) GetF1614() string {
	if x != nil {
		return x.F1614
	}
	return ""
}

func (x *PKTS) GetNamaAtasan() string {
	if x != nil {
		return x.NamaAtasan
	}
	return ""
}

func (x *PKTS) GetHpAtasan() string {
	if x != nil {
		return x.HpAtasan
	}
	return ""
}

func (x *PKTS) GetEmailAtasan() string {
	if x != nil {
		return x.EmailAtasan
	}
	return ""
}

func (x *PKTS) GetTinggalSelamaKuliah() string {
	if x != nil {
		return x.TinggalSelamaKuliah
	}
	return ""
}

func (x *PKTS) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PKTS) GetMailSent() *timestamppb.Timestamp {
	if x != nil {
		return x.MailSent
	}
	return nil
}

func (x *PKTS) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PKTS) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PKTS) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type PKTSRekapByProdi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nim           string                 `protobuf:"bytes,1,opt,name=nim,proto3" json:"nim,omitempty"`
	Nama          string                 `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	F8            uint32                 `protobuf:"varint,3,opt,name=f8,proto3" json:"f8,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Email         string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Hp            string                 `protobuf:"bytes,6,opt,name=hp,proto3" json:"hp,omitempty"`
	TanggalSidang string                 `protobuf:"bytes,7,opt,name=tanggal_sidang,json=tanggalSidang,proto3" json:"tanggal_sidang,omitempty"`
	PktsStatus    string                 `protobuf:"bytes,8,opt,name=pkts_status,json=pktsStatus,proto3" json:"pkts_status,omitempty"`
	ProvKerja     string                 `protobuf:"bytes,9,opt,name=prov_kerja,json=provKerja,proto3" json:"prov_kerja,omitempty"`
	UmpPkts       string                 `protobuf:"bytes,10,opt,name=ump_pkts,json=umpPkts,proto3" json:"ump_pkts,omitempty"`
	Penghasilan   string                 `protobuf:"bytes,11,opt,name=penghasilan,proto3" json:"penghasilan,omitempty"`
	InputPkts     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=input_pkts,json=inputPkts,proto3" json:"input_pkts,omitempty"`
	UpdatePkts    *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=update_pkts,json=updatePkts,proto3" json:"update_pkts,omitempty"`
}

func (x *PKTSRekapByProdi) Reset() {
	*x = PKTSRekapByProdi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PKTSRekapByProdi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PKTSRekapByProdi) ProtoMessage() {}

func (x *PKTSRekapByProdi) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PKTSRekapByProdi.ProtoReflect.Descriptor instead.
func (*PKTSRekapByProdi) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{1}
}

func (x *PKTSRekapByProdi) GetNim() string {
	if x != nil {
		return x.Nim
	}
	return ""
}

func (x *PKTSRekapByProdi) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *PKTSRekapByProdi) GetF8() uint32 {
	if x != nil {
		return x.F8
	}
	return 0
}

func (x *PKTSRekapByProdi) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PKTSRekapByProdi) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PKTSRekapByProdi) GetHp() string {
	if x != nil {
		return x.Hp
	}
	return ""
}

func (x *PKTSRekapByProdi) GetTanggalSidang() string {
	if x != nil {
		return x.TanggalSidang
	}
	return ""
}

func (x *PKTSRekapByProdi) GetPktsStatus() string {
	if x != nil {
		return x.PktsStatus
	}
	return ""
}

func (x *PKTSRekapByProdi) GetProvKerja() string {
	if x != nil {
		return x.ProvKerja
	}
	return ""
}

func (x *PKTSRekapByProdi) GetUmpPkts() string {
	if x != nil {
		return x.UmpPkts
	}
	return ""
}

func (x *PKTSRekapByProdi) GetPenghasilan() string {
	if x != nil {
		return x.Penghasilan
	}
	return ""
}

func (x *PKTSRekapByProdi) GetInputPkts() *timestamppb.Timestamp {
	if x != nil {
		return x.InputPkts
	}
	return nil
}

func (x *PKTSRekapByProdi) GetUpdatePkts() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatePkts
	}
	return nil
}

type PKTSRekapByYear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fakultas                string  `protobuf:"bytes,1,opt,name=fakultas,proto3" json:"fakultas,omitempty"`
	KodeProdi               string  `protobuf:"bytes,2,opt,name=kode_prodi,json=kodeProdi,proto3" json:"kode_prodi,omitempty"`
	NamaProdi               string  `protobuf:"bytes,3,opt,name=nama_prodi,json=namaProdi,proto3" json:"nama_prodi,omitempty"`
	Jenjang                 string  `protobuf:"bytes,4,opt,name=jenjang,proto3" json:"jenjang,omitempty"`
	AlumniCount             uint32  `protobuf:"varint,5,opt,name=alumni_count,json=alumniCount,proto3" json:"alumni_count,omitempty"`
	PktsCount               uint32  `protobuf:"varint,6,opt,name=pkts_count,json=pktsCount,proto3" json:"pkts_count,omitempty"`
	PktsPercentage          float64 `protobuf:"fixed64,7,opt,name=pkts_percentage,json=pktsPercentage,proto3" json:"pkts_percentage,omitempty"`
	StatusLanjutstudiCount  uint32  `protobuf:"varint,8,opt,name=status_lanjutstudi_count,json=statusLanjutstudiCount,proto3" json:"status_lanjutstudi_count,omitempty"`
	StatusHasincomeCount    uint32  `protobuf:"varint,9,opt,name=status_hasincome_count,json=statusHasincomeCount,proto3" json:"status_hasincome_count,omitempty"`
	HasincomeUmpCount       uint32  `protobuf:"varint,10,opt,name=hasincome_ump_count,json=hasincomeUmpCount,proto3" json:"hasincome_ump_count,omitempty"`
	HasincomeUmpPercentage  float64 `protobuf:"fixed64,11,opt,name=hasincome_ump_percentage,json=hasincomeUmpPercentage,proto3" json:"hasincome_ump_percentage,omitempty"`
	StatusLainnyaCount      uint32  `protobuf:"varint,12,opt,name=status_lainnya_count,json=statusLainnyaCount,proto3" json:"status_lainnya_count,omitempty"`
	StatusLainnyaPercentage float64 `protobuf:"fixed64,13,opt,name=status_lainnya_percentage,json=statusLainnyaPercentage,proto3" json:"status_lainnya_percentage,omitempty"`
}

func (x *PKTSRekapByYear) Reset() {
	*x = PKTSRekapByYear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PKTSRekapByYear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PKTSRekapByYear) ProtoMessage() {}

func (x *PKTSRekapByYear) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PKTSRekapByYear.ProtoReflect.Descriptor instead.
func (*PKTSRekapByYear) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{2}
}

func (x *PKTSRekapByYear) GetFakultas() string {
	if x != nil {
		return x.Fakultas
	}
	return ""
}

func (x *PKTSRekapByYear) GetKodeProdi() string {
	if x != nil {
		return x.KodeProdi
	}
	return ""
}

func (x *PKTSRekapByYear) GetNamaProdi() string {
	if x != nil {
		return x.NamaProdi
	}
	return ""
}

func (x *PKTSRekapByYear) GetJenjang() string {
	if x != nil {
		return x.Jenjang
	}
	return ""
}

func (x *PKTSRekapByYear) GetAlumniCount() uint32 {
	if x != nil {
		return x.AlumniCount
	}
	return 0
}

func (x *PKTSRekapByYear) GetPktsCount() uint32 {
	if x != nil {
		return x.PktsCount
	}
	return 0
}

func (x *PKTSRekapByYear) GetPktsPercentage() float64 {
	if x != nil {
		return x.PktsPercentage
	}
	return 0
}

func (x *PKTSRekapByYear) GetStatusLanjutstudiCount() uint32 {
	if x != nil {
		return x.StatusLanjutstudiCount
	}
	return 0
}

func (x *PKTSRekapByYear) GetStatusHasincomeCount() uint32 {
	if x != nil {
		return x.StatusHasincomeCount
	}
	return 0
}

func (x *PKTSRekapByYear) GetHasincomeUmpCount() uint32 {
	if x != nil {
		return x.HasincomeUmpCount
	}
	return 0
}

func (x *PKTSRekapByYear) GetHasincomeUmpPercentage() float64 {
	if x != nil {
		return x.HasincomeUmpPercentage
	}
	return 0
}

func (x *PKTSRekapByYear) GetStatusLainnyaCount() uint32 {
	if x != nil {
		return x.StatusLainnyaCount
	}
	return 0
}

func (x *PKTSRekapByYear) GetStatusLainnyaPercentage() float64 {
	if x != nil {
		return x.StatusLainnyaPercentage
	}
	return 0
}

type GetAllPKTSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*PKTS `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAllPKTSResponse) Reset() {
	*x = GetAllPKTSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPKTSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPKTSResponse) ProtoMessage() {}

func (x *GetAllPKTSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPKTSResponse.ProtoReflect.Descriptor instead.
func (*GetAllPKTSResponse) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllPKTSResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAllPKTSResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllPKTSResponse) GetData() []*PKTS {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPKTSByNimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nim string `protobuf:"bytes,1,opt,name=nim,proto3" json:"nim,omitempty"`
}

func (x *GetPKTSByNimRequest) Reset() {
	*x = GetPKTSByNimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPKTSByNimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPKTSByNimRequest) ProtoMessage() {}

func (x *GetPKTSByNimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPKTSByNimRequest.ProtoReflect.Descriptor instead.
func (*GetPKTSByNimRequest) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{4}
}

func (x *GetPKTSByNimRequest) GetNim() string {
	if x != nil {
		return x.Nim
	}
	return ""
}

type GetPKTSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *PKTS  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPKTSResponse) Reset() {
	*x = GetPKTSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPKTSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPKTSResponse) ProtoMessage() {}

func (x *GetPKTSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPKTSResponse.ProtoReflect.Descriptor instead.
func (*GetPKTSResponse) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{5}
}

func (x *GetPKTSResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPKTSResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPKTSResponse) GetData() *PKTS {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetNimByDataAtasanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamaAtasan  string `protobuf:"bytes,1,opt,name=nama_atasan,json=namaAtasan,proto3" json:"nama_atasan,omitempty"`
	HpAtasan    string `protobuf:"bytes,2,opt,name=hp_atasan,json=hpAtasan,proto3" json:"hp_atasan,omitempty"`
	EmailAtasan string `protobuf:"bytes,3,opt,name=email_atasan,json=emailAtasan,proto3" json:"email_atasan,omitempty"`
}

func (x *GetNimByDataAtasanRequest) Reset() {
	*x = GetNimByDataAtasanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNimByDataAtasanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNimByDataAtasanRequest) ProtoMessage() {}

func (x *GetNimByDataAtasanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNimByDataAtasanRequest.ProtoReflect.Descriptor instead.
func (*GetNimByDataAtasanRequest) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{6}
}

func (x *GetNimByDataAtasanRequest) GetNamaAtasan() string {
	if x != nil {
		return x.NamaAtasan
	}
	return ""
}

func (x *GetNimByDataAtasanRequest) GetHpAtasan() string {
	if x != nil {
		return x.HpAtasan
	}
	return ""
}

func (x *GetNimByDataAtasanRequest) GetEmailAtasan() string {
	if x != nil {
		return x.EmailAtasan
	}
	return ""
}

type GetNimByDataAtasanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Nims    []string `protobuf:"bytes,3,rep,name=nims,proto3" json:"nims,omitempty"`
}

func (x *GetNimByDataAtasanResponse) Reset() {
	*x = GetNimByDataAtasanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNimByDataAtasanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNimByDataAtasanResponse) ProtoMessage() {}

func (x *GetNimByDataAtasanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNimByDataAtasanResponse.ProtoReflect.Descriptor instead.
func (*GetNimByDataAtasanResponse) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{7}
}

func (x *GetNimByDataAtasanResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetNimByDataAtasanResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetNimByDataAtasanResponse) GetNims() []string {
	if x != nil {
		return x.Nims
	}
	return nil
}

type ExportPKTSReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ExportPKTSReportResponse) Reset() {
	*x = ExportPKTSReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportPKTSReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPKTSReportResponse) ProtoMessage() {}

func (x *ExportPKTSReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportPKTSReportResponse.ProtoReflect.Descriptor instead.
func (*ExportPKTSReportResponse) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{8}
}

func (x *ExportPKTSReportResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ExportPKTSReportResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ExportPKTSReportResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPKTSRekapByProdiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kodeprodi   string `protobuf:"bytes,1,opt,name=kodeprodi,proto3" json:"kodeprodi,omitempty"`
	TahunSidang string `protobuf:"bytes,2,opt,name=tahun_sidang,json=tahunSidang,proto3" json:"tahun_sidang,omitempty"`
}

func (x *GetPKTSRekapByProdiRequest) Reset() {
	*x = GetPKTSRekapByProdiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPKTSRekapByProdiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPKTSRekapByProdiRequest) ProtoMessage() {}

func (x *GetPKTSRekapByProdiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPKTSRekapByProdiRequest.ProtoReflect.Descriptor instead.
func (*GetPKTSRekapByProdiRequest) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{9}
}

func (x *GetPKTSRekapByProdiRequest) GetKodeprodi() string {
	if x != nil {
		return x.Kodeprodi
	}
	return ""
}

func (x *GetPKTSRekapByProdiRequest) GetTahunSidang() string {
	if x != nil {
		return x.TahunSidang
	}
	return ""
}

type GetPKTSRekapByProdiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*PKTSRekapByProdi `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPKTSRekapByProdiResponse) Reset() {
	*x = GetPKTSRekapByProdiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPKTSRekapByProdiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPKTSRekapByProdiResponse) ProtoMessage() {}

func (x *GetPKTSRekapByProdiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPKTSRekapByProdiResponse.ProtoReflect.Descriptor instead.
func (*GetPKTSRekapByProdiResponse) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{10}
}

func (x *GetPKTSRekapByProdiResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPKTSRekapByProdiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPKTSRekapByProdiResponse) GetData() []*PKTSRekapByProdi {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPKTSRekapByYearRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TahunSidang string `protobuf:"bytes,1,opt,name=tahun_sidang,json=tahunSidang,proto3" json:"tahun_sidang,omitempty"`
}

func (x *GetPKTSRekapByYearRequest) Reset() {
	*x = GetPKTSRekapByYearRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPKTSRekapByYearRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPKTSRekapByYearRequest) ProtoMessage() {}

func (x *GetPKTSRekapByYearRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPKTSRekapByYearRequest.ProtoReflect.Descriptor instead.
func (*GetPKTSRekapByYearRequest) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{11}
}

func (x *GetPKTSRekapByYearRequest) GetTahunSidang() string {
	if x != nil {
		return x.TahunSidang
	}
	return ""
}

type GetPKTSRekapByYearResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*PKTSRekapByYear `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPKTSRekapByYearResponse) Reset() {
	*x = GetPKTSRekapByYearResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPKTSRekapByYearResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPKTSRekapByYearResponse) ProtoMessage() {}

func (x *GetPKTSRekapByYearResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPKTSRekapByYearResponse.ProtoReflect.Descriptor instead.
func (*GetPKTSRekapByYearResponse) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{12}
}

func (x *GetPKTSRekapByYearResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPKTSRekapByYearResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPKTSRekapByYearResponse) GetData() []*PKTSRekapByYear {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExportPKTSReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TahunSidang string `protobuf:"bytes,1,opt,name=tahun_sidang,json=tahunSidang,proto3" json:"tahun_sidang,omitempty"`
}

func (x *ExportPKTSReportRequest) Reset() {
	*x = ExportPKTSReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkts_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportPKTSReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPKTSReportRequest) ProtoMessage() {}

func (x *ExportPKTSReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkts_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportPKTSReportRequest.ProtoReflect.Descriptor instead.
func (*ExportPKTSReportRequest) Descriptor() ([]byte, []int) {
	return file_pkts_proto_rawDescGZIP(), []int{13}
}

func (x *ExportPKTSReportRequest) GetTahunSidang() string {
	if x != nil {
		return x.TahunSidang
	}
	return ""
}

var File_pkts_proto protoreflect.FileDescriptor

var file_pkts_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x70, 0x6b, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x10,
	0x0a, 0x04, 0x50, 0x4b, 0x54, 0x53, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x6f, 0x64, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x6f,
	0x64, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x68, 0x75, 0x6e,
	0x5f, 0x73, 0x69, 0x64, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x61, 0x68, 0x75, 0x6e, 0x53, 0x69, 0x64, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x38,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x66, 0x38, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x35,
	0x30, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x35, 0x30, 0x34, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x35, 0x30, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x35,
	0x30, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x35, 0x30, 0x36, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x66, 0x35, 0x30, 0x36, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x35, 0x30, 0x35, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x35, 0x30, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x35,
	0x61, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x35, 0x61, 0x31, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x35, 0x61, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x35,
	0x61, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x31, 0x30, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x66, 0x31, 0x31, 0x30, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x31, 0x30,
	0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x31, 0x31, 0x30, 0x32, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x35, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x35, 0x62,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x35, 0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66,
	0x35, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x35, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x66, 0x35, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x31, 0x38, 0x61, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x66, 0x31, 0x38, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x31, 0x38, 0x62,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x31, 0x38, 0x62, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x31, 0x38, 0x63, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x31, 0x38, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x31, 0x38, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x31, 0x38, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x32, 0x30, 0x31, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x32, 0x30, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31,
	0x32, 0x30, 0x32, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x31, 0x32, 0x30, 0x32,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x31, 0x34, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66,
	0x31, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x31, 0x35, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x66, 0x31, 0x35, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x37, 0x36, 0x31, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x37, 0x36, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31,
	0x37, 0x36, 0x32, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x37, 0x36, 0x32,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x37, 0x36, 0x33, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x66, 0x31, 0x37, 0x36, 0x33, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x37, 0x36, 0x34, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x37, 0x36, 0x34, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x31, 0x37, 0x36, 0x35, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x37,
	0x36, 0x35, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x37, 0x36, 0x36, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x66, 0x31, 0x37, 0x36, 0x36, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x37, 0x36,
	0x37, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x37, 0x36, 0x37, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x31, 0x37, 0x36, 0x38, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66,
	0x31, 0x37, 0x36, 0x38, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x37, 0x36, 0x39, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x37, 0x36, 0x39, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31,
	0x37, 0x37, 0x30, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x37, 0x37, 0x30,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x37, 0x37, 0x31, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x66, 0x31, 0x37, 0x37, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x37, 0x37, 0x32, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x37, 0x37, 0x32, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x31, 0x37, 0x37, 0x33, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x37,
	0x37, 0x33, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x37, 0x37, 0x34, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x66, 0x31, 0x37, 0x37, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x32, 0x31, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66, 0x32, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x32,
	0x32, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66, 0x32, 0x32, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x32, 0x33, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66, 0x32, 0x33, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x32, 0x34, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66, 0x32, 0x34,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x32, 0x35, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x66,
	0x32, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x32, 0x36, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x66, 0x32, 0x36, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x32, 0x37, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x66, 0x32, 0x37, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x33, 0x30, 0x31, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x33, 0x30, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x33,
	0x30, 0x32, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x33, 0x30, 0x32, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x33, 0x30, 0x33, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x33,
	0x30, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34, 0x30, 0x31, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x66, 0x34, 0x30, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34, 0x30, 0x32, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34, 0x30, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34,
	0x30, 0x33, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34, 0x30, 0x33, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x34, 0x30, 0x34, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34,
	0x30, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34, 0x30, 0x35, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x66, 0x34, 0x30, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34, 0x30, 0x36, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34, 0x30, 0x36, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34,
	0x30, 0x37, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34, 0x30, 0x37, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x34, 0x30, 0x38, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34,
	0x30, 0x38, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34, 0x30, 0x39, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x66, 0x34, 0x30, 0x39, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34, 0x31, 0x30, 0x18, 0x3a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34, 0x31, 0x30, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34,
	0x31, 0x31, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34, 0x31, 0x31, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x34, 0x31, 0x32, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34,
	0x31, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34, 0x31, 0x33, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x66, 0x34, 0x31, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34, 0x31, 0x34, 0x18, 0x3e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34, 0x31, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x34,
	0x31, 0x35, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x34, 0x31, 0x35, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x34, 0x31, 0x36, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x34,
	0x31, 0x36, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x36, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x66, 0x36, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x37, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x66, 0x37, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x37, 0x61, 0x18, 0x43, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x66, 0x37, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x30, 0x30, 0x31, 0x18, 0x44, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x30, 0x30, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31,
	0x30, 0x30, 0x32, 0x18, 0x45, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x31, 0x30, 0x30, 0x32,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x36, 0x30, 0x31, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x66, 0x31, 0x36, 0x30, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x36, 0x30, 0x32, 0x18,
	0x47, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x36, 0x30, 0x32, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x31, 0x36, 0x30, 0x33, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x36,
	0x30, 0x33, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x36, 0x30, 0x34, 0x18, 0x49, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x66, 0x31, 0x36, 0x30, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x36, 0x30,
	0x35, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x36, 0x30, 0x35, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x31, 0x36, 0x30, 0x36, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66,
	0x31, 0x36, 0x30, 0x36, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x36, 0x30, 0x37, 0x18, 0x4c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x36, 0x30, 0x37, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31,
	0x36, 0x30, 0x38, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x36, 0x30, 0x38,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x36, 0x30, 0x39, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x66, 0x31, 0x36, 0x30, 0x39, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x36, 0x31, 0x30, 0x18,
	0x4f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x36, 0x31, 0x30, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x31, 0x36, 0x31, 0x31, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x36,
	0x31, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x36, 0x31, 0x32, 0x18, 0x51, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x66, 0x31, 0x36, 0x31, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x31, 0x36, 0x31,
	0x33, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x31, 0x36, 0x31, 0x33, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x31, 0x36, 0x31, 0x34, 0x18, 0x53, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66,
	0x31, 0x36, 0x31, 0x34, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x61, 0x74, 0x61,
	0x73, 0x61, 0x6e, 0x18, 0x54, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x61, 0x41,
	0x74, 0x61, 0x73, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x70, 0x5f, 0x61, 0x74, 0x61, 0x73,
	0x61, 0x6e, 0x18, 0x55, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x70, 0x41, 0x74, 0x61, 0x73,
	0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x74, 0x61, 0x73,
	0x61, 0x6e, 0x18, 0x56, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x74, 0x61, 0x73, 0x61, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x69, 0x6e, 0x67, 0x67, 0x61, 0x6c,
	0x5f, 0x73, 0x65, 0x6c, 0x61, 0x6d, 0x61, 0x5f, 0x6b, 0x75, 0x6c, 0x69, 0x61, 0x68, 0x18, 0x57,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x69, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x53, 0x65, 0x6c,
	0x61, 0x6d, 0x61, 0x4b, 0x75, 0x6c, 0x69, 0x61, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x58, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x59, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6d, 0x61,
	0x69, 0x6c, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa2, 0x03, 0x0a, 0x10, 0x50, 0x4b, 0x54, 0x53,
	0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x38, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x66, 0x38, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x68, 0x70,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x64, 0x61,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61,
	0x6c, 0x53, 0x69, 0x64, 0x61, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6b, 0x74, 0x73, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6b,
	0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x76,
	0x5f, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x76, 0x4b, 0x65, 0x72, 0x6a, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6d, 0x70, 0x5f, 0x70,
	0x6b, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6d, 0x70, 0x50, 0x6b,
	0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x6e, 0x67, 0x68, 0x61, 0x73, 0x69, 0x6c, 0x61,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x6e, 0x67, 0x68, 0x61, 0x73,
	0x69, 0x6c, 0x61, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x6b,
	0x74, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x6b, 0x74, 0x73, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6b, 0x74, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6b, 0x74, 0x73, 0x22, 0xb8, 0x04, 0x0a,
	0x0f, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x59, 0x65, 0x61, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x6b, 0x75, 0x6c, 0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x6b, 0x75, 0x6c, 0x74, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6b, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x61, 0x6d, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x65,
	0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x65, 0x6e,
	0x6a, 0x61, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x75, 0x6d, 0x6e, 0x69, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x6c, 0x75, 0x6d,
	0x6e, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6b, 0x74, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x6b, 0x74,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6b, 0x74, 0x73, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x70, 0x6b, 0x74, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x38, 0x0a, 0x18, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x61, 0x6e, 0x6a, 0x75, 0x74,
	0x73, 0x74, 0x75, 0x64, 0x69, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x16, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x61, 0x6e, 0x6a, 0x75, 0x74, 0x73,
	0x74, 0x75, 0x64, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x48, 0x61, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x68, 0x61, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x6d, 0x70,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x68, 0x61,
	0x73, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x55, 0x6d, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x38, 0x0a, 0x18, 0x68, 0x61, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x6d, 0x70,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x16, 0x68, 0x61, 0x73, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x55, 0x6d, 0x70, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x6c, 0x61, 0x69, 0x6e, 0x6e, 0x79, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c,
	0x61, 0x69, 0x6e, 0x6e, 0x79, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x61, 0x69, 0x6e, 0x6e, 0x79, 0x61, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x61, 0x69, 0x6e, 0x6e, 0x79, 0x61, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x6f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x4b,
	0x54, 0x53, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x27, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50,
	0x4b, 0x54, 0x53, 0x42, 0x79, 0x4e, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69,
	0x6d, 0x22, 0x6c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x7c, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6d, 0x42, 0x79, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x74, 0x61, 0x73, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x61, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x61, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x68, 0x70, 0x5f, 0x61, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x70, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x61, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x22, 0x5e, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6d, 0x42, 0x79, 0x44, 0x61, 0x74, 0x61, 0x41, 0x74, 0x61,
	0x73, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69, 0x6d, 0x73, 0x22, 0x5c, 0x0a,
	0x18, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x6f, 0x64,
	0x65, 0x70, 0x72, 0x6f, 0x64, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x6f,
	0x64, 0x65, 0x70, 0x72, 0x6f, 0x64, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x68, 0x75, 0x6e,
	0x5f, 0x73, 0x69, 0x64, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x61, 0x68, 0x75, 0x6e, 0x53, 0x69, 0x64, 0x61, 0x6e, 0x67, 0x22, 0x84, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x4b, 0x54, 0x53, 0x52,
	0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x3e, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b, 0x61,
	0x70, 0x42, 0x79, 0x59, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x61, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x53, 0x69, 0x64, 0x61, 0x6e,
	0x67, 0x22, 0x82, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b,
	0x61, 0x70, 0x42, 0x79, 0x59, 0x65, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x59, 0x65, 0x61, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x17, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x73, 0x69, 0x64, 0x61, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x53, 0x69,
	0x64, 0x61, 0x6e, 0x67, 0x32, 0x95, 0x06, 0x0a, 0x0b, 0x50, 0x4b, 0x54, 0x53, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x4b,
	0x54, 0x53, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x42, 0x79, 0x4e, 0x69,
	0x6d, 0x12, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x42, 0x79, 0x4e,
	0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x4b, 0x54, 0x53, 0x12, 0x17, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x50, 0x4b, 0x54, 0x53, 0x1a, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x54, 0x53,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x4b, 0x54, 0x53, 0x12, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x4b, 0x54, 0x53, 0x1a,
	0x22, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x69, 0x6d, 0x42, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x12, 0x2c, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x69, 0x6d, 0x42, 0x79, 0x44, 0x61, 0x74, 0x61, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x69, 0x6d, 0x42, 0x79, 0x44, 0x61, 0x74, 0x61, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2a, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65,
	0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x12, 0x2d, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f,
	0x64, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x2c, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b, 0x61, 0x70,
	0x42, 0x79, 0x59, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x54, 0x53, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79,
	0x59, 0x65, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05,
	0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkts_proto_rawDescOnce sync.Once
	file_pkts_proto_rawDescData = file_pkts_proto_rawDesc
)

func file_pkts_proto_rawDescGZIP() []byte {
	file_pkts_proto_rawDescOnce.Do(func() {
		file_pkts_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkts_proto_rawDescData)
	})
	return file_pkts_proto_rawDescData
}

var file_pkts_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_pkts_proto_goTypes = []interface{}{
	(*PKTS)(nil),                        // 0: tracer_study_grpc.PKTS
	(*PKTSRekapByProdi)(nil),            // 1: tracer_study_grpc.PKTSRekapByProdi
	(*PKTSRekapByYear)(nil),             // 2: tracer_study_grpc.PKTSRekapByYear
	(*GetAllPKTSResponse)(nil),          // 3: tracer_study_grpc.GetAllPKTSResponse
	(*GetPKTSByNimRequest)(nil),         // 4: tracer_study_grpc.GetPKTSByNimRequest
	(*GetPKTSResponse)(nil),             // 5: tracer_study_grpc.GetPKTSResponse
	(*GetNimByDataAtasanRequest)(nil),   // 6: tracer_study_grpc.GetNimByDataAtasanRequest
	(*GetNimByDataAtasanResponse)(nil),  // 7: tracer_study_grpc.GetNimByDataAtasanResponse
	(*ExportPKTSReportResponse)(nil),    // 8: tracer_study_grpc.ExportPKTSReportResponse
	(*GetPKTSRekapByProdiRequest)(nil),  // 9: tracer_study_grpc.GetPKTSRekapByProdiRequest
	(*GetPKTSRekapByProdiResponse)(nil), // 10: tracer_study_grpc.GetPKTSRekapByProdiResponse
	(*GetPKTSRekapByYearRequest)(nil),   // 11: tracer_study_grpc.GetPKTSRekapByYearRequest
	(*GetPKTSRekapByYearResponse)(nil),  // 12: tracer_study_grpc.GetPKTSRekapByYearResponse
	(*ExportPKTSReportRequest)(nil),     // 13: tracer_study_grpc.ExportPKTSReportRequest
	(*timestamppb.Timestamp)(nil),       // 14: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 15: google.protobuf.Empty
}
var file_pkts_proto_depIdxs = []int32{
	14, // 0: tracer_study_grpc.PKTS.mail_sent:type_name -> google.protobuf.Timestamp
	14, // 1: tracer_study_grpc.PKTS.created_at:type_name -> google.protobuf.Timestamp
	14, // 2: tracer_study_grpc.PKTS.updated_at:type_name -> google.protobuf.Timestamp
	14, // 3: tracer_study_grpc.PKTS.deleted_at:type_name -> google.protobuf.Timestamp
	14, // 4: tracer_study_grpc.PKTSRekapByProdi.input_pkts:type_name -> google.protobuf.Timestamp
	14, // 5: tracer_study_grpc.PKTSRekapByProdi.update_pkts:type_name -> google.protobuf.Timestamp
	0,  // 6: tracer_study_grpc.GetAllPKTSResponse.data:type_name -> tracer_study_grpc.PKTS
	0,  // 7: tracer_study_grpc.GetPKTSResponse.data:type_name -> tracer_study_grpc.PKTS
	1,  // 8: tracer_study_grpc.GetPKTSRekapByProdiResponse.data:type_name -> tracer_study_grpc.PKTSRekapByProdi
	2,  // 9: tracer_study_grpc.GetPKTSRekapByYearResponse.data:type_name -> tracer_study_grpc.PKTSRekapByYear
	15, // 10: tracer_study_grpc.PKTSService.GetAllPKTS:input_type -> google.protobuf.Empty
	4,  // 11: tracer_study_grpc.PKTSService.GetPKTSByNim:input_type -> tracer_study_grpc.GetPKTSByNimRequest
	0,  // 12: tracer_study_grpc.PKTSService.CreatePKTS:input_type -> tracer_study_grpc.PKTS
	0,  // 13: tracer_study_grpc.PKTSService.UpdatePKTS:input_type -> tracer_study_grpc.PKTS
	6,  // 14: tracer_study_grpc.PKTSService.GetNimByDataAtasan:input_type -> tracer_study_grpc.GetNimByDataAtasanRequest
	13, // 15: tracer_study_grpc.PKTSService.ExportPKTSReport:input_type -> tracer_study_grpc.ExportPKTSReportRequest
	9,  // 16: tracer_study_grpc.PKTSService.GetPKTSRekapByProdi:input_type -> tracer_study_grpc.GetPKTSRekapByProdiRequest
	11, // 17: tracer_study_grpc.PKTSService.GetPKTSRekapByYear:input_type -> tracer_study_grpc.GetPKTSRekapByYearRequest
	3,  // 18: tracer_study_grpc.PKTSService.GetAllPKTS:output_type -> tracer_study_grpc.GetAllPKTSResponse
	5,  // 19: tracer_study_grpc.PKTSService.GetPKTSByNim:output_type -> tracer_study_grpc.GetPKTSResponse
	5,  // 20: tracer_study_grpc.PKTSService.CreatePKTS:output_type -> tracer_study_grpc.GetPKTSResponse
	5,  // 21: tracer_study_grpc.PKTSService.UpdatePKTS:output_type -> tracer_study_grpc.GetPKTSResponse
	7,  // 22: tracer_study_grpc.PKTSService.GetNimByDataAtasan:output_type -> tracer_study_grpc.GetNimByDataAtasanResponse
	8,  // 23: tracer_study_grpc.PKTSService.ExportPKTSReport:output_type -> tracer_study_grpc.ExportPKTSReportResponse
	10, // 24: tracer_study_grpc.PKTSService.GetPKTSRekapByProdi:output_type -> tracer_study_grpc.GetPKTSRekapByProdiResponse
	12, // 25: tracer_study_grpc.PKTSService.GetPKTSRekapByYear:output_type -> tracer_study_grpc.GetPKTSRekapByYearResponse
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_pkts_proto_init() }
func file_pkts_proto_init() {
	if File_pkts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PKTS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PKTSRekapByProdi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PKTSRekapByYear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPKTSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPKTSByNimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPKTSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNimByDataAtasanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNimByDataAtasanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportPKTSReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPKTSRekapByProdiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPKTSRekapByProdiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPKTSRekapByYearRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPKTSRekapByYearResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkts_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportPKTSReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkts_proto_goTypes,
		DependencyIndexes: file_pkts_proto_depIdxs,
		MessageInfos:      file_pkts_proto_msgTypes,
	}.Build()
	File_pkts_proto = out.File
	file_pkts_proto_rawDesc = nil
	file_pkts_proto_goTypes = nil
	file_pkts_proto_depIdxs = nil
}
