// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.1
// source: mhsbiodata.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	MhsBiodataService_FetchMhsBiodataByNim_FullMethodName = "/tracer_study_grpc.MhsBiodataService/FetchMhsBiodataByNim"
)

// MhsBiodataServiceClient is the client API for MhsBiodataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MhsBiodataServiceClient interface {
	FetchMhsBiodataByNim(ctx context.Context, in *MhsBiodataRequest, opts ...grpc.CallOption) (*MhsBiodataResponse, error)
}

type mhsBiodataServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMhsBiodataServiceClient(cc grpc.ClientConnInterface) MhsBiodataServiceClient {
	return &mhsBiodataServiceClient{cc}
}

func (c *mhsBiodataServiceClient) FetchMhsBiodataByNim(ctx context.Context, in *MhsBiodataRequest, opts ...grpc.CallOption) (*MhsBiodataResponse, error) {
	out := new(MhsBiodataResponse)
	err := c.cc.Invoke(ctx, MhsBiodataService_FetchMhsBiodataByNim_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MhsBiodataServiceServer is the server API for MhsBiodataService service.
// All implementations must embed UnimplementedMhsBiodataServiceServer
// for forward compatibility
type MhsBiodataServiceServer interface {
	FetchMhsBiodataByNim(context.Context, *MhsBiodataRequest) (*MhsBiodataResponse, error)
	mustEmbedUnimplementedMhsBiodataServiceServer()
}

// UnimplementedMhsBiodataServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMhsBiodataServiceServer struct {
}

func (UnimplementedMhsBiodataServiceServer) FetchMhsBiodataByNim(context.Context, *MhsBiodataRequest) (*MhsBiodataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchMhsBiodataByNim not implemented")
}
func (UnimplementedMhsBiodataServiceServer) mustEmbedUnimplementedMhsBiodataServiceServer() {}

// UnsafeMhsBiodataServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MhsBiodataServiceServer will
// result in compilation errors.
type UnsafeMhsBiodataServiceServer interface {
	mustEmbedUnimplementedMhsBiodataServiceServer()
}

func RegisterMhsBiodataServiceServer(s grpc.ServiceRegistrar, srv MhsBiodataServiceServer) {
	s.RegisterService(&MhsBiodataService_ServiceDesc, srv)
}

func _MhsBiodataService_FetchMhsBiodataByNim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MhsBiodataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MhsBiodataServiceServer).FetchMhsBiodataByNim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MhsBiodataService_FetchMhsBiodataByNim_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MhsBiodataServiceServer).FetchMhsBiodataByNim(ctx, req.(*MhsBiodataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MhsBiodataService_ServiceDesc is the grpc.ServiceDesc for MhsBiodataService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MhsBiodataService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "tracer_study_grpc.MhsBiodataService",
	HandlerType: (*MhsBiodataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchMhsBiodataByNim",
			Handler:    _MhsBiodataService_FetchMhsBiodataByNim_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mhsbiodata.proto",
}
