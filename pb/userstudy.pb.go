// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: userstudy.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserStudy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NamaResponden                     string                 `protobuf:"bytes,2,opt,name=nama_responden,json=namaResponden,proto3" json:"nama_responden,omitempty"`
	EmailResponden                    string                 `protobuf:"bytes,3,opt,name=email_responden,json=emailResponden,proto3" json:"email_responden,omitempty"`
	HpResponden                       string                 `protobuf:"bytes,4,opt,name=hp_responden,json=hpResponden,proto3" json:"hp_responden,omitempty"`
	NamaInstansi                      string                 `protobuf:"bytes,5,opt,name=nama_instansi,json=namaInstansi,proto3" json:"nama_instansi,omitempty"`
	Jabatan                           string                 `protobuf:"bytes,6,opt,name=jabatan,proto3" json:"jabatan,omitempty"`
	AlamatInstansi                    string                 `protobuf:"bytes,7,opt,name=alamat_instansi,json=alamatInstansi,proto3" json:"alamat_instansi,omitempty"`
	NimLulusan                        string                 `protobuf:"bytes,8,opt,name=nim_lulusan,json=nimLulusan,proto3" json:"nim_lulusan,omitempty"`
	NamaLulusan                       string                 `protobuf:"bytes,9,opt,name=nama_lulusan,json=namaLulusan,proto3" json:"nama_lulusan,omitempty"`
	ProdiLulusan                      string                 `protobuf:"bytes,10,opt,name=prodi_lulusan,json=prodiLulusan,proto3" json:"prodi_lulusan,omitempty"`
	TahunLulusan                      string                 `protobuf:"bytes,11,opt,name=tahun_lulusan,json=tahunLulusan,proto3" json:"tahun_lulusan,omitempty"`
	LamaMengenalLulusan               uint32                 `protobuf:"varint,12,opt,name=lama_mengenal_lulusan,json=lamaMengenalLulusan,proto3" json:"lama_mengenal_lulusan,omitempty"`
	Etika                             string                 `protobuf:"bytes,13,opt,name=etika,proto3" json:"etika,omitempty"`
	KeahlianBidIlmu                   string                 `protobuf:"bytes,14,opt,name=keahlian_bid_ilmu,json=keahlianBidIlmu,proto3" json:"keahlian_bid_ilmu,omitempty"`
	BahasaInggris                     string                 `protobuf:"bytes,15,opt,name=bahasa_inggris,json=bahasaInggris,proto3" json:"bahasa_inggris,omitempty"`
	PenggunaanTi                      string                 `protobuf:"bytes,16,opt,name=penggunaan_ti,json=penggunaanTi,proto3" json:"penggunaan_ti,omitempty"`
	Komunikasi                        string                 `protobuf:"bytes,17,opt,name=komunikasi,proto3" json:"komunikasi,omitempty"`
	KerjasamaTim                      string                 `protobuf:"bytes,18,opt,name=kerjasama_tim,json=kerjasamaTim,proto3" json:"kerjasama_tim,omitempty"`
	PengembanganDiri                  string                 `protobuf:"bytes,19,opt,name=pengembangan_diri,json=pengembanganDiri,proto3" json:"pengembangan_diri,omitempty"`
	KesiapanTerjunMasy                string                 `protobuf:"bytes,20,opt,name=kesiapan_terjun_masy,json=kesiapanTerjunMasy,proto3" json:"kesiapan_terjun_masy,omitempty"`
	KeunggulanLulusan                 string                 `protobuf:"bytes,21,opt,name=keunggulan_lulusan,json=keunggulanLulusan,proto3" json:"keunggulan_lulusan,omitempty"`
	KelemahanLulusan                  string                 `protobuf:"bytes,22,opt,name=kelemahan_lulusan,json=kelemahanLulusan,proto3" json:"kelemahan_lulusan,omitempty"`
	SaranPeningkatanKompetensiLulusan string                 `protobuf:"bytes,23,opt,name=saran_peningkatan_kompetensi_lulusan,json=saranPeningkatanKompetensiLulusan,proto3" json:"saran_peningkatan_kompetensi_lulusan,omitempty"`
	SaranPerbaikanKurikulum           string                 `protobuf:"bytes,24,opt,name=saran_perbaikan_kurikulum,json=saranPerbaikanKurikulum,proto3" json:"saran_perbaikan_kurikulum,omitempty"`
	CreatedAt                         *timestamppb.Timestamp `protobuf:"bytes,27,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                         *timestamppb.Timestamp `protobuf:"bytes,28,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt                         *timestamppb.Timestamp `protobuf:"bytes,29,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *UserStudy) Reset() {
	*x = UserStudy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStudy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStudy) ProtoMessage() {}

func (x *UserStudy) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStudy.ProtoReflect.Descriptor instead.
func (*UserStudy) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{0}
}

func (x *UserStudy) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserStudy) GetNamaResponden() string {
	if x != nil {
		return x.NamaResponden
	}
	return ""
}

func (x *UserStudy) GetEmailResponden() string {
	if x != nil {
		return x.EmailResponden
	}
	return ""
}

func (x *UserStudy) GetHpResponden() string {
	if x != nil {
		return x.HpResponden
	}
	return ""
}

func (x *UserStudy) GetNamaInstansi() string {
	if x != nil {
		return x.NamaInstansi
	}
	return ""
}

func (x *UserStudy) GetJabatan() string {
	if x != nil {
		return x.Jabatan
	}
	return ""
}

func (x *UserStudy) GetAlamatInstansi() string {
	if x != nil {
		return x.AlamatInstansi
	}
	return ""
}

func (x *UserStudy) GetNimLulusan() string {
	if x != nil {
		return x.NimLulusan
	}
	return ""
}

func (x *UserStudy) GetNamaLulusan() string {
	if x != nil {
		return x.NamaLulusan
	}
	return ""
}

func (x *UserStudy) GetProdiLulusan() string {
	if x != nil {
		return x.ProdiLulusan
	}
	return ""
}

func (x *UserStudy) GetTahunLulusan() string {
	if x != nil {
		return x.TahunLulusan
	}
	return ""
}

func (x *UserStudy) GetLamaMengenalLulusan() uint32 {
	if x != nil {
		return x.LamaMengenalLulusan
	}
	return 0
}

func (x *UserStudy) GetEtika() string {
	if x != nil {
		return x.Etika
	}
	return ""
}

func (x *UserStudy) GetKeahlianBidIlmu() string {
	if x != nil {
		return x.KeahlianBidIlmu
	}
	return ""
}

func (x *UserStudy) GetBahasaInggris() string {
	if x != nil {
		return x.BahasaInggris
	}
	return ""
}

func (x *UserStudy) GetPenggunaanTi() string {
	if x != nil {
		return x.PenggunaanTi
	}
	return ""
}

func (x *UserStudy) GetKomunikasi() string {
	if x != nil {
		return x.Komunikasi
	}
	return ""
}

func (x *UserStudy) GetKerjasamaTim() string {
	if x != nil {
		return x.KerjasamaTim
	}
	return ""
}

func (x *UserStudy) GetPengembanganDiri() string {
	if x != nil {
		return x.PengembanganDiri
	}
	return ""
}

func (x *UserStudy) GetKesiapanTerjunMasy() string {
	if x != nil {
		return x.KesiapanTerjunMasy
	}
	return ""
}

func (x *UserStudy) GetKeunggulanLulusan() string {
	if x != nil {
		return x.KeunggulanLulusan
	}
	return ""
}

func (x *UserStudy) GetKelemahanLulusan() string {
	if x != nil {
		return x.KelemahanLulusan
	}
	return ""
}

func (x *UserStudy) GetSaranPeningkatanKompetensiLulusan() string {
	if x != nil {
		return x.SaranPeningkatanKompetensiLulusan
	}
	return ""
}

func (x *UserStudy) GetSaranPerbaikanKurikulum() string {
	if x != nil {
		return x.SaranPerbaikanKurikulum
	}
	return ""
}

func (x *UserStudy) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserStudy) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserStudy) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type SingleUserStudyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *UserStudy `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SingleUserStudyResponse) Reset() {
	*x = SingleUserStudyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleUserStudyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleUserStudyResponse) ProtoMessage() {}

func (x *SingleUserStudyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleUserStudyResponse.ProtoReflect.Descriptor instead.
func (*SingleUserStudyResponse) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{1}
}

func (x *SingleUserStudyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SingleUserStudyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SingleUserStudyResponse) GetData() *UserStudy {
	if x != nil {
		return x.Data
	}
	return nil
}

type MultipleUserStudyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*UserStudy `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MultipleUserStudyResponse) Reset() {
	*x = MultipleUserStudyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleUserStudyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleUserStudyResponse) ProtoMessage() {}

func (x *MultipleUserStudyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleUserStudyResponse.ProtoReflect.Descriptor instead.
func (*MultipleUserStudyResponse) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{2}
}

func (x *MultipleUserStudyResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MultipleUserStudyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MultipleUserStudyResponse) GetData() []*UserStudy {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserStudyByNimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nim            string `protobuf:"bytes,1,opt,name=nim,proto3" json:"nim,omitempty"`
	EmailResponden string `protobuf:"bytes,2,opt,name=email_responden,json=emailResponden,proto3" json:"email_responden,omitempty"`
	HpResponden    string `protobuf:"bytes,3,opt,name=hp_responden,json=hpResponden,proto3" json:"hp_responden,omitempty"`
}

func (x *GetUserStudyByNimRequest) Reset() {
	*x = GetUserStudyByNimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStudyByNimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStudyByNimRequest) ProtoMessage() {}

func (x *GetUserStudyByNimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStudyByNimRequest.ProtoReflect.Descriptor instead.
func (*GetUserStudyByNimRequest) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserStudyByNimRequest) GetNim() string {
	if x != nil {
		return x.Nim
	}
	return ""
}

func (x *GetUserStudyByNimRequest) GetEmailResponden() string {
	if x != nil {
		return x.EmailResponden
	}
	return ""
}

func (x *GetUserStudyByNimRequest) GetHpResponden() string {
	if x != nil {
		return x.HpResponden
	}
	return ""
}

type ExportUSReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ExportUSReportResponse) Reset() {
	*x = ExportUSReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportUSReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportUSReportResponse) ProtoMessage() {}

func (x *ExportUSReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportUSReportResponse.ProtoReflect.Descriptor instead.
func (*ExportUSReportResponse) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{4}
}

func (x *ExportUSReportResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ExportUSReportResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ExportUSReportResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAlumniByAtasanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamaAtasan  string `protobuf:"bytes,1,opt,name=nama_atasan,json=namaAtasan,proto3" json:"nama_atasan,omitempty"`
	HpAtasan    string `protobuf:"bytes,2,opt,name=hp_atasan,json=hpAtasan,proto3" json:"hp_atasan,omitempty"`
	EmailAtasan string `protobuf:"bytes,3,opt,name=email_atasan,json=emailAtasan,proto3" json:"email_atasan,omitempty"`
}

func (x *GetAlumniByAtasanRequest) Reset() {
	*x = GetAlumniByAtasanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlumniByAtasanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlumniByAtasanRequest) ProtoMessage() {}

func (x *GetAlumniByAtasanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlumniByAtasanRequest.ProtoReflect.Descriptor instead.
func (*GetAlumniByAtasanRequest) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{5}
}

func (x *GetAlumniByAtasanRequest) GetNamaAtasan() string {
	if x != nil {
		return x.NamaAtasan
	}
	return ""
}

func (x *GetAlumniByAtasanRequest) GetHpAtasan() string {
	if x != nil {
		return x.HpAtasan
	}
	return ""
}

func (x *GetAlumniByAtasanRequest) GetEmailAtasan() string {
	if x != nil {
		return x.EmailAtasan
	}
	return ""
}

type GetAlumniByAtasanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*Responden `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAlumniByAtasanResponse) Reset() {
	*x = GetAlumniByAtasanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlumniByAtasanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlumniByAtasanResponse) ProtoMessage() {}

func (x *GetAlumniByAtasanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlumniByAtasanResponse.ProtoReflect.Descriptor instead.
func (*GetAlumniByAtasanResponse) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{6}
}

func (x *GetAlumniByAtasanResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetAlumniByAtasanResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAlumniByAtasanResponse) GetData() []*Responden {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserStudyRekap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fakultas            string  `protobuf:"bytes,1,opt,name=fakultas,proto3" json:"fakultas,omitempty"`
	KodeProdi           string  `protobuf:"bytes,2,opt,name=kode_prodi,json=kodeProdi,proto3" json:"kode_prodi,omitempty"`
	NamaProdi           string  `protobuf:"bytes,3,opt,name=nama_prodi,json=namaProdi,proto3" json:"nama_prodi,omitempty"`
	Jenjang             string  `protobuf:"bytes,4,opt,name=jenjang,proto3" json:"jenjang,omitempty"`
	AlumniCount         uint32  `protobuf:"varint,5,opt,name=alumni_count,json=alumniCount,proto3" json:"alumni_count,omitempty"`
	PktsCount           uint32  `protobuf:"varint,6,opt,name=pkts_count,json=pktsCount,proto3" json:"pkts_count,omitempty"`
	UserStudyCount      uint32  `protobuf:"varint,7,opt,name=user_study_count,json=userStudyCount,proto3" json:"user_study_count,omitempty"`
	UserStudyPercentage float64 `protobuf:"fixed64,8,opt,name=user_study_percentage,json=userStudyPercentage,proto3" json:"user_study_percentage,omitempty"`
}

func (x *UserStudyRekap) Reset() {
	*x = UserStudyRekap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStudyRekap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStudyRekap) ProtoMessage() {}

func (x *UserStudyRekap) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStudyRekap.ProtoReflect.Descriptor instead.
func (*UserStudyRekap) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{7}
}

func (x *UserStudyRekap) GetFakultas() string {
	if x != nil {
		return x.Fakultas
	}
	return ""
}

func (x *UserStudyRekap) GetKodeProdi() string {
	if x != nil {
		return x.KodeProdi
	}
	return ""
}

func (x *UserStudyRekap) GetNamaProdi() string {
	if x != nil {
		return x.NamaProdi
	}
	return ""
}

func (x *UserStudyRekap) GetJenjang() string {
	if x != nil {
		return x.Jenjang
	}
	return ""
}

func (x *UserStudyRekap) GetAlumniCount() uint32 {
	if x != nil {
		return x.AlumniCount
	}
	return 0
}

func (x *UserStudyRekap) GetPktsCount() uint32 {
	if x != nil {
		return x.PktsCount
	}
	return 0
}

func (x *UserStudyRekap) GetUserStudyCount() uint32 {
	if x != nil {
		return x.UserStudyCount
	}
	return 0
}

func (x *UserStudyRekap) GetUserStudyPercentage() float64 {
	if x != nil {
		return x.UserStudyPercentage
	}
	return 0
}

type GetUserStudyRekapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*UserStudyRekap `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserStudyRekapResponse) Reset() {
	*x = GetUserStudyRekapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStudyRekapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStudyRekapResponse) ProtoMessage() {}

func (x *GetUserStudyRekapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStudyRekapResponse.ProtoReflect.Descriptor instead.
func (*GetUserStudyRekapResponse) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserStudyRekapResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUserStudyRekapResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserStudyRekapResponse) GetData() []*UserStudyRekap {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserStudyRekapByProdi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nim               string `protobuf:"bytes,1,opt,name=nim,proto3" json:"nim,omitempty"`
	Nama              string `protobuf:"bytes,2,opt,name=nama,proto3" json:"nama,omitempty"`
	TahunLulus        string `protobuf:"bytes,3,opt,name=tahun_lulus,json=tahunLulus,proto3" json:"tahun_lulus,omitempty"`
	PktsNamaAtasan    string `protobuf:"bytes,4,opt,name=pkts_nama_atasan,json=pktsNamaAtasan,proto3" json:"pkts_nama_atasan,omitempty"`
	PktsEmailAtasan   string `protobuf:"bytes,5,opt,name=pkts_email_atasan,json=pktsEmailAtasan,proto3" json:"pkts_email_atasan,omitempty"`
	PktsInstansi      string `protobuf:"bytes,6,opt,name=pkts_instansi,json=pktsInstansi,proto3" json:"pkts_instansi,omitempty"`
	UserstudyStatus   string `protobuf:"bytes,7,opt,name=userstudy_status,json=userstudyStatus,proto3" json:"userstudy_status,omitempty"`
	UserstudyNama     string `protobuf:"bytes,8,opt,name=userstudy_nama,json=userstudyNama,proto3" json:"userstudy_nama,omitempty"`
	UserstudyEmail    string `protobuf:"bytes,9,opt,name=userstudy_email,json=userstudyEmail,proto3" json:"userstudy_email,omitempty"`
	UserstudyInstansi string `protobuf:"bytes,10,opt,name=userstudy_instansi,json=userstudyInstansi,proto3" json:"userstudy_instansi,omitempty"`
	AverageGrade      string `protobuf:"bytes,11,opt,name=average_grade,json=averageGrade,proto3" json:"average_grade,omitempty"`
}

func (x *UserStudyRekapByProdi) Reset() {
	*x = UserStudyRekapByProdi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStudyRekapByProdi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStudyRekapByProdi) ProtoMessage() {}

func (x *UserStudyRekapByProdi) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStudyRekapByProdi.ProtoReflect.Descriptor instead.
func (*UserStudyRekapByProdi) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{9}
}

func (x *UserStudyRekapByProdi) GetNim() string {
	if x != nil {
		return x.Nim
	}
	return ""
}

func (x *UserStudyRekapByProdi) GetNama() string {
	if x != nil {
		return x.Nama
	}
	return ""
}

func (x *UserStudyRekapByProdi) GetTahunLulus() string {
	if x != nil {
		return x.TahunLulus
	}
	return ""
}

func (x *UserStudyRekapByProdi) GetPktsNamaAtasan() string {
	if x != nil {
		return x.PktsNamaAtasan
	}
	return ""
}

func (x *UserStudyRekapByProdi) GetPktsEmailAtasan() string {
	if x != nil {
		return x.PktsEmailAtasan
	}
	return ""
}

func (x *UserStudyRekapByProdi) GetPktsInstansi() string {
	if x != nil {
		return x.PktsInstansi
	}
	return ""
}

func (x *UserStudyRekapByProdi) GetUserstudyStatus() string {
	if x != nil {
		return x.UserstudyStatus
	}
	return ""
}

func (x *UserStudyRekapByProdi) GetUserstudyNama() string {
	if x != nil {
		return x.UserstudyNama
	}
	return ""
}

func (x *UserStudyRekapByProdi) GetUserstudyEmail() string {
	if x != nil {
		return x.UserstudyEmail
	}
	return ""
}

func (x *UserStudyRekapByProdi) GetUserstudyInstansi() string {
	if x != nil {
		return x.UserstudyInstansi
	}
	return ""
}

func (x *UserStudyRekapByProdi) GetAverageGrade() string {
	if x != nil {
		return x.AverageGrade
	}
	return ""
}

type GetUserStudyRekapByProdiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KodeProdi string `protobuf:"bytes,1,opt,name=kode_prodi,json=kodeProdi,proto3" json:"kode_prodi,omitempty"`
}

func (x *GetUserStudyRekapByProdiRequest) Reset() {
	*x = GetUserStudyRekapByProdiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStudyRekapByProdiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStudyRekapByProdiRequest) ProtoMessage() {}

func (x *GetUserStudyRekapByProdiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStudyRekapByProdiRequest.ProtoReflect.Descriptor instead.
func (*GetUserStudyRekapByProdiRequest) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserStudyRekapByProdiRequest) GetKodeProdi() string {
	if x != nil {
		return x.KodeProdi
	}
	return ""
}

type GetUserStudyRekapByProdiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*UserStudyRekapByProdi `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetUserStudyRekapByProdiResponse) Reset() {
	*x = GetUserStudyRekapByProdiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userstudy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserStudyRekapByProdiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserStudyRekapByProdiResponse) ProtoMessage() {}

func (x *GetUserStudyRekapByProdiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userstudy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserStudyRekapByProdiResponse.ProtoReflect.Descriptor instead.
func (*GetUserStudyRekapByProdiResponse) Descriptor() ([]byte, []int) {
	return file_userstudy_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserStudyRekapByProdiResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUserStudyRekapByProdiResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserStudyRekapByProdiResponse) GetData() []*UserStudyRekapByProdi {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_userstudy_proto protoreflect.FileDescriptor

var file_userstudy_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x74, 0x75, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x84, 0x09, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x73, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x61, 0x6d,
	0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x73, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x61, 0x62,
	0x61, 0x74, 0x61, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x61, 0x62, 0x61,
	0x74, 0x61, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x61, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x73, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c,
	0x61, 0x6d, 0x61, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x73, 0x69, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x69, 0x6d, 0x5f, 0x6c, 0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6e, 0x69, 0x6d, 0x4c, 0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x6c, 0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x4c, 0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x69, 0x5f, 0x6c, 0x75, 0x6c, 0x75, 0x73, 0x61,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x69, 0x4c, 0x75,
	0x6c, 0x75, 0x73, 0x61, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x6c,
	0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61,
	0x68, 0x75, 0x6e, 0x4c, 0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x61,
	0x6d, 0x61, 0x5f, 0x6d, 0x65, 0x6e, 0x67, 0x65, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x75, 0x6c, 0x75,
	0x73, 0x61, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6c, 0x61, 0x6d, 0x61, 0x4d,
	0x65, 0x6e, 0x67, 0x65, 0x6e, 0x61, 0x6c, 0x4c, 0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x74, 0x69, 0x6b, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x74, 0x69, 0x6b, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x6b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e,
	0x5f, 0x62, 0x69, 0x64, 0x5f, 0x69, 0x6c, 0x6d, 0x75, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6b, 0x65, 0x61, 0x68, 0x6c, 0x69, 0x61, 0x6e, 0x42, 0x69, 0x64, 0x49, 0x6c, 0x6d, 0x75,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x68, 0x61, 0x73, 0x61, 0x5f, 0x69, 0x6e, 0x67, 0x67, 0x72,
	0x69, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x68, 0x61, 0x73, 0x61,
	0x49, 0x6e, 0x67, 0x67, 0x72, 0x69, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x65, 0x6e, 0x67, 0x67,
	0x75, 0x6e, 0x61, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x65, 0x6e, 0x67, 0x67, 0x75, 0x6e, 0x61, 0x61, 0x6e, 0x54, 0x69, 0x12, 0x1e, 0x0a, 0x0a,
	0x6b, 0x6f, 0x6d, 0x75, 0x6e, 0x69, 0x6b, 0x61, 0x73, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6b, 0x6f, 0x6d, 0x75, 0x6e, 0x69, 0x6b, 0x61, 0x73, 0x69, 0x12, 0x23, 0x0a, 0x0d,
	0x6b, 0x65, 0x72, 0x6a, 0x61, 0x73, 0x61, 0x6d, 0x61, 0x5f, 0x74, 0x69, 0x6d, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x65, 0x72, 0x6a, 0x61, 0x73, 0x61, 0x6d, 0x61, 0x54, 0x69,
	0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x65, 0x6e, 0x67, 0x65, 0x6d, 0x62, 0x61, 0x6e, 0x67, 0x61,
	0x6e, 0x5f, 0x64, 0x69, 0x72, 0x69, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x65,
	0x6e, 0x67, 0x65, 0x6d, 0x62, 0x61, 0x6e, 0x67, 0x61, 0x6e, 0x44, 0x69, 0x72, 0x69, 0x12, 0x30,
	0x0a, 0x14, 0x6b, 0x65, 0x73, 0x69, 0x61, 0x70, 0x61, 0x6e, 0x5f, 0x74, 0x65, 0x72, 0x6a, 0x75,
	0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6b, 0x65,
	0x73, 0x69, 0x61, 0x70, 0x61, 0x6e, 0x54, 0x65, 0x72, 0x6a, 0x75, 0x6e, 0x4d, 0x61, 0x73, 0x79,
	0x12, 0x2d, 0x0a, 0x12, 0x6b, 0x65, 0x75, 0x6e, 0x67, 0x67, 0x75, 0x6c, 0x61, 0x6e, 0x5f, 0x6c,
	0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6b, 0x65,
	0x75, 0x6e, 0x67, 0x67, 0x75, 0x6c, 0x61, 0x6e, 0x4c, 0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x12,
	0x2b, 0x0a, 0x11, 0x6b, 0x65, 0x6c, 0x65, 0x6d, 0x61, 0x68, 0x61, 0x6e, 0x5f, 0x6c, 0x75, 0x6c,
	0x75, 0x73, 0x61, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6b, 0x65, 0x6c, 0x65,
	0x6d, 0x61, 0x68, 0x61, 0x6e, 0x4c, 0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x12, 0x4f, 0x0a, 0x24,
	0x73, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x61,
	0x6e, 0x5f, 0x6b, 0x6f, 0x6d, 0x70, 0x65, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x5f, 0x6c, 0x75, 0x6c,
	0x75, 0x73, 0x61, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21, 0x73, 0x61, 0x72, 0x61,
	0x6e, 0x50, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x6b, 0x61, 0x74, 0x61, 0x6e, 0x4b, 0x6f, 0x6d, 0x70,
	0x65, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x4c, 0x75, 0x6c, 0x75, 0x73, 0x61, 0x6e, 0x12, 0x3a, 0x0a,
	0x19, 0x73, 0x61, 0x72, 0x61, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x62, 0x61, 0x69, 0x6b, 0x61, 0x6e,
	0x5f, 0x6b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x73, 0x61, 0x72, 0x61, 0x6e, 0x50, 0x65, 0x72, 0x62, 0x61, 0x69, 0x6b, 0x61, 0x6e,
	0x4b, 0x75, 0x72, 0x69, 0x6b, 0x75, 0x6c, 0x75, 0x6d, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x79, 0x0a, 0x17, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7b, 0x0a, 0x19, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x78, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x42, 0x79, 0x4e, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x6d,
	0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x64, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x68, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x22, 0x5a, 0x0a, 0x16,
	0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x75, 0x6d, 0x6e, 0x69, 0x42, 0x79, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x61, 0x74, 0x61,
	0x73, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x61, 0x41,
	0x74, 0x61, 0x73, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x70, 0x5f, 0x61, 0x74, 0x61, 0x73,
	0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x70, 0x41, 0x74, 0x61, 0x73,
	0x61, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x74, 0x61, 0x73,
	0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x74, 0x61, 0x73, 0x61, 0x6e, 0x22, 0x7b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x75, 0x6d,
	0x6e, 0x69, 0x42, 0x79, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x65, 0x6e, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xa4, 0x02, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x52, 0x65, 0x6b, 0x61, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x6b, 0x75, 0x6c, 0x74, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x6b, 0x75, 0x6c, 0x74, 0x61,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6b, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x69,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x61, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x12,
	0x18, 0x0a, 0x07, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6a, 0x65, 0x6e, 0x6a, 0x61, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x75,
	0x6d, 0x6e, 0x69, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x61, 0x6c, 0x75, 0x6d, 0x6e, 0x69, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x6b, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x6b, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64,
	0x79, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa8, 0x03, 0x0a,
	0x15, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42,
	0x79, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x69, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x69, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x61, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x61, 0x68, 0x75, 0x6e, 0x5f, 0x6c, 0x75, 0x6c, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x61, 0x68, 0x75, 0x6e, 0x4c, 0x75, 0x6c, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x6b, 0x74, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x61, 0x5f, 0x61, 0x74, 0x61, 0x73, 0x61,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6b, 0x74, 0x73, 0x4e, 0x61, 0x6d,
	0x61, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6b, 0x74, 0x73, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x70, 0x6b, 0x74, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x61,
	0x73, 0x61, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6b, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x73, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6b, 0x74, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x73, 0x69, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x74, 0x75, 0x64, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x74, 0x75, 0x64, 0x79, 0x4e, 0x61, 0x6d, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x74, 0x75, 0x64, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x2d, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x73, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x75, 0x73, 0x65, 0x72, 0x73, 0x74, 0x75, 0x64, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x73, 0x69, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x47, 0x72, 0x61, 0x64, 0x65, 0x22, 0x40, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72,
	0x6f, 0x64, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x6f,
	0x64, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6b, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x22, 0x8e, 0x01, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42,
	0x79, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50,
	0x72, 0x6f, 0x64, 0x69, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xcd, 0x06, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x59, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x42, 0x79, 0x4e, 0x69, 0x6d, 0x12,
	0x2b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x42, 0x79, 0x4e, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x12, 0x1c, 0x2e,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x1a, 0x2a, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x12, 0x1c, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x1a, 0x2a, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x55, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x29, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x53, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x74, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x75, 0x6d, 0x6e, 0x69, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x12, 0x2b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x75, 0x6d, 0x6e, 0x69, 0x42, 0x79, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x75,
	0x6d, 0x6e, 0x69, 0x42, 0x79, 0x41, 0x74, 0x61, 0x73, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x12,
	0x32, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x75, 0x64, 0x79,
	0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x69, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x75, 0x64, 0x79, 0x52, 0x65, 0x6b, 0x61, 0x70, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f,
	0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_userstudy_proto_rawDescOnce sync.Once
	file_userstudy_proto_rawDescData = file_userstudy_proto_rawDesc
)

func file_userstudy_proto_rawDescGZIP() []byte {
	file_userstudy_proto_rawDescOnce.Do(func() {
		file_userstudy_proto_rawDescData = protoimpl.X.CompressGZIP(file_userstudy_proto_rawDescData)
	})
	return file_userstudy_proto_rawDescData
}

var file_userstudy_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_userstudy_proto_goTypes = []interface{}{
	(*UserStudy)(nil),                        // 0: tracer_study_grpc.UserStudy
	(*SingleUserStudyResponse)(nil),          // 1: tracer_study_grpc.SingleUserStudyResponse
	(*MultipleUserStudyResponse)(nil),        // 2: tracer_study_grpc.MultipleUserStudyResponse
	(*GetUserStudyByNimRequest)(nil),         // 3: tracer_study_grpc.GetUserStudyByNimRequest
	(*ExportUSReportResponse)(nil),           // 4: tracer_study_grpc.ExportUSReportResponse
	(*GetAlumniByAtasanRequest)(nil),         // 5: tracer_study_grpc.GetAlumniByAtasanRequest
	(*GetAlumniByAtasanResponse)(nil),        // 6: tracer_study_grpc.GetAlumniByAtasanResponse
	(*UserStudyRekap)(nil),                   // 7: tracer_study_grpc.UserStudyRekap
	(*GetUserStudyRekapResponse)(nil),        // 8: tracer_study_grpc.GetUserStudyRekapResponse
	(*UserStudyRekapByProdi)(nil),            // 9: tracer_study_grpc.UserStudyRekapByProdi
	(*GetUserStudyRekapByProdiRequest)(nil),  // 10: tracer_study_grpc.GetUserStudyRekapByProdiRequest
	(*GetUserStudyRekapByProdiResponse)(nil), // 11: tracer_study_grpc.GetUserStudyRekapByProdiResponse
	(*timestamppb.Timestamp)(nil),            // 12: google.protobuf.Timestamp
	(*Responden)(nil),                        // 13: tracer_study_grpc.Responden
	(*emptypb.Empty)(nil),                    // 14: google.protobuf.Empty
}
var file_userstudy_proto_depIdxs = []int32{
	12, // 0: tracer_study_grpc.UserStudy.created_at:type_name -> google.protobuf.Timestamp
	12, // 1: tracer_study_grpc.UserStudy.updated_at:type_name -> google.protobuf.Timestamp
	12, // 2: tracer_study_grpc.UserStudy.deleted_at:type_name -> google.protobuf.Timestamp
	0,  // 3: tracer_study_grpc.SingleUserStudyResponse.data:type_name -> tracer_study_grpc.UserStudy
	0,  // 4: tracer_study_grpc.MultipleUserStudyResponse.data:type_name -> tracer_study_grpc.UserStudy
	13, // 5: tracer_study_grpc.GetAlumniByAtasanResponse.data:type_name -> tracer_study_grpc.Responden
	7,  // 6: tracer_study_grpc.GetUserStudyRekapResponse.data:type_name -> tracer_study_grpc.UserStudyRekap
	9,  // 7: tracer_study_grpc.GetUserStudyRekapByProdiResponse.data:type_name -> tracer_study_grpc.UserStudyRekapByProdi
	14, // 8: tracer_study_grpc.UserStudyService.GetAllUserStudy:input_type -> google.protobuf.Empty
	3,  // 9: tracer_study_grpc.UserStudyService.GetUserStudyByNim:input_type -> tracer_study_grpc.GetUserStudyByNimRequest
	0,  // 10: tracer_study_grpc.UserStudyService.CreateUserStudy:input_type -> tracer_study_grpc.UserStudy
	0,  // 11: tracer_study_grpc.UserStudyService.UpdateUserStudy:input_type -> tracer_study_grpc.UserStudy
	14, // 12: tracer_study_grpc.UserStudyService.ExportUSReport:input_type -> google.protobuf.Empty
	5,  // 13: tracer_study_grpc.UserStudyService.GetAlumniListByAtasan:input_type -> tracer_study_grpc.GetAlumniByAtasanRequest
	14, // 14: tracer_study_grpc.UserStudyService.GetUserStudyRekap:input_type -> google.protobuf.Empty
	10, // 15: tracer_study_grpc.UserStudyService.GetUserStudyRekapByProdi:input_type -> tracer_study_grpc.GetUserStudyRekapByProdiRequest
	2,  // 16: tracer_study_grpc.UserStudyService.GetAllUserStudy:output_type -> tracer_study_grpc.MultipleUserStudyResponse
	1,  // 17: tracer_study_grpc.UserStudyService.GetUserStudyByNim:output_type -> tracer_study_grpc.SingleUserStudyResponse
	1,  // 18: tracer_study_grpc.UserStudyService.CreateUserStudy:output_type -> tracer_study_grpc.SingleUserStudyResponse
	1,  // 19: tracer_study_grpc.UserStudyService.UpdateUserStudy:output_type -> tracer_study_grpc.SingleUserStudyResponse
	4,  // 20: tracer_study_grpc.UserStudyService.ExportUSReport:output_type -> tracer_study_grpc.ExportUSReportResponse
	6,  // 21: tracer_study_grpc.UserStudyService.GetAlumniListByAtasan:output_type -> tracer_study_grpc.GetAlumniByAtasanResponse
	8,  // 22: tracer_study_grpc.UserStudyService.GetUserStudyRekap:output_type -> tracer_study_grpc.GetUserStudyRekapResponse
	11, // 23: tracer_study_grpc.UserStudyService.GetUserStudyRekapByProdi:output_type -> tracer_study_grpc.GetUserStudyRekapByProdiResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_userstudy_proto_init() }
func file_userstudy_proto_init() {
	if File_userstudy_proto != nil {
		return
	}
	file_responden_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_userstudy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStudy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleUserStudyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleUserStudyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStudyByNimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportUSReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlumniByAtasanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlumniByAtasanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStudyRekap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStudyRekapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStudyRekapByProdi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStudyRekapByProdiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userstudy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserStudyRekapByProdiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_userstudy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_userstudy_proto_goTypes,
		DependencyIndexes: file_userstudy_proto_depIdxs,
		MessageInfos:      file_userstudy_proto_msgTypes,
	}.Build()
	File_userstudy_proto = out.File
	file_userstudy_proto_rawDesc = nil
	file_userstudy_proto_goTypes = nil
	file_userstudy_proto_depIdxs = nil
}
